@startuml

title __TRANSFORMATION's Class Diagram__\n

  namespace  {
    namespace om.zaozhuang.newborn {
      namespace view {
        namespace transformation {
          class com.zaozhuang.newborn.view.transformation.CircleTransform {
              - ID : String
              - ID_ByTES : byte[]
              - mViewHeight : int
              - mViewWidth : int
              + CircleTransform()
              + equals()
              + hashCode()
              + transform()
              + updateDiskCacheKey()
              # transform()
              - getOutHeight()
              - getOutWidth()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.zaozhuang.newborn {
      namespace view {
        namespace transformation {
          class com.zaozhuang.newborn.view.transformation.CornersTransform {
              {static} + CORNER_ALL : int
              {static} + CORNER_BOTTOM_LEFT : int
              {static} + CORNER_BOTTOM_RIGHT : int
              {static} + CORNER_TOP : int
              {static} + CORNER_TOP_LEFT : int
              {static} + CORNER_TOP_RIGHT : int
              - ID : String
              - ID_ByTES : byte[]
              - mCornerType : int
              - mRoundRadius : float
              - mScaleType : ScaleType
              - mViewHeight : int
              - mViewWidth : int
              + CornersTransform()
              + CornersTransform()
              + CornersTransform()
              + CornersTransform()
              + equals()
              + hashCode()
              + transform()
              + updateDiskCacheKey()
              # transform()
              - getOutHeight()
              - getOutWidth()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.zaozhuang.newborn {
      namespace view {
        namespace transformation {
          class com.zaozhuang.newborn.view.transformation.CornersTransformTop {
              {static} + CORNER_ALL : int
              {static} + CORNER_BOTTOM_LEFT : int
              {static} + CORNER_BOTTOM_RIGHT : int
              {static} + CORNER_TOP_LEFT : int
              {static} + CORNER_TOP_RIGHT : int
              - mCornerType : int
              - mRoundRadius : float
              - mScaleType : ScaleType
              - mViewHeight : int
              - mViewWidth : int
              + CornersTransformTop()
              + CornersTransformTop()
              + CornersTransformTop()
              + CornersTransformTop()
              + transform()
              + updateDiskCacheKey()
              # transform()
              - getOutHeight()
              - getOutWidth()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.zaozhuang.newborn {
      namespace view {
        namespace transformation {
          interface com.zaozhuang.newborn.view.transformation.ITransformation {
              {abstract} + transform()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.zaozhuang.newborn {
      namespace view {
        namespace transformation {
          class com.zaozhuang.newborn.view.transformation.TransformationUtils {
              {static} ~ centerCrop()
              {static} ~ fitCenter()
              {static} - calcFitCenterRect()
              {static} - check()
              {static} - createCenterCropMatrix()
          }
        }
      }
    }
  }
  

  com.zaozhuang.newborn.view.transformation.CircleTransform .up.|> com.zaozhuang.newborn.view.transformation.ITransformation
  com.zaozhuang.newborn.view.transformation.CircleTransform -up-|> com.bumptech.glide.load.resource.bitmap.BitmapTransformation
  com.zaozhuang.newborn.view.transformation.CornersTransform .up.|> com.zaozhuang.newborn.view.transformation.ITransformation
  com.zaozhuang.newborn.view.transformation.CornersTransform -up-|> com.bumptech.glide.load.resource.bitmap.BitmapTransformation
  com.zaozhuang.newborn.view.transformation.CornersTransformTop .up.|> com.zaozhuang.newborn.view.transformation.ITransformation
  com.zaozhuang.newborn.view.transformation.CornersTransformTop -up-|> com.bumptech.glide.load.resource.bitmap.BitmapTransformation


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
